/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      refineMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Cells to refine; name of 'cellSet'
set	highRes ;

// Type of coordinate system:
// - global : Coordinate system same for every cell.
//            Usually aligned with x, y, z axis.
//            Specify in globalCoeffs section below.
// - patchLocal : Coordinate system different for every cell.
//                Specify in patchLocalCoeffs section below.
coordinateSystem global ;
// coordinateSystem patchLocal ;

// Specifies 2 directions by a name and a vector.
// The normal direction is calculated as tan1^tan2.
globalCoeffs
{
    tan1            (1 0 0);
    tan2            (0 1 0);
}

/*
 * // Normal direction is face normal of zero'th face of patch
 * patchLocalCoeffs
 * {
 * 	patch           outside;
 * 	tan1            (1 0 0);
 * 	tan2            (0 0 1);
 * }
 */

// Specifies the direction to be refined by the name used above
// To refine in the third direction, use the keyword 'normal'
directions      ( tan1 tan2 );

// Whether to use hex topology. This will
// - if patchLocal: all cells on selected patch should be hex
// - split all hexes in 2x2x2 through the middle of edges.
useHexTopology  yes;

// Cut purely geometric (will cut hexes through vertices) or take
// topology into account. Incompatible with 'useHexTopology'
geometricCut    no;

// Write meshes from intermediate steps
writeMesh       no;

// ************************************************************************* //
